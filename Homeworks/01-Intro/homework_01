.. code:: ipython3

    import pandas as pd
    print(f"Pandas version: {pd.__version__}")
    
    df_arq1 = pd.read_csv("/home/marcus-vinicius/Desktop/Python/Machine_Leaning_Zoomcamp/car_fuel_efficiency.csv")
    null_values = df_arq1.isnull().any().sum()
    print(f"Has: {null_values} null values")
    print(df_arq1.head())
    print(df_arq1.info())
    
    print("x"*100)
    
    df_fuel = df_arq1["fuel_type"]
    print(f"Fuel types:{df_fuel.nunique()}")
    print(f"QTD: {df_fuel.value_counts()}")
    
    fuel_asia = df_arq1[df_arq1["origin"] == "Asia"]["fuel_efficiency_mpg"]
    print(fuel_asia.max())


.. parsed-literal::

    Pandas version: 2.1.4
    Has: 4 null values
       engine_displacement  num_cylinders  horsepower  vehicle_weight  \
    0                  170            3.0       159.0     3413.433759   
    1                  130            5.0        97.0     3149.664934   
    2                  170            NaN        78.0     3079.038997   
    3                  220            4.0         NaN     2542.392402   
    4                  210            1.0       140.0     3460.870990   
    
       acceleration  model_year  origin fuel_type         drivetrain  num_doors  \
    0          17.7        2003  Europe  Gasoline    All-wheel drive        0.0   
    1          17.8        2007     USA  Gasoline  Front-wheel drive        0.0   
    2          15.1        2018  Europe  Gasoline  Front-wheel drive        0.0   
    3          20.2        2009     USA    Diesel    All-wheel drive        2.0   
    4          14.4        2009  Europe  Gasoline    All-wheel drive        2.0   
    
       fuel_efficiency_mpg  
    0            13.231729  
    1            13.688217  
    2            14.246341  
    3            16.912736  
    4            12.488369  
    <class 'pandas.core.frame.DataFrame'>
    RangeIndex: 9704 entries, 0 to 9703
    Data columns (total 11 columns):
     #   Column               Non-Null Count  Dtype  
    ---  ------               --------------  -----  
     0   engine_displacement  9704 non-null   int64  
     1   num_cylinders        9222 non-null   float64
     2   horsepower           8996 non-null   float64
     3   vehicle_weight       9704 non-null   float64
     4   acceleration         8774 non-null   float64
     5   model_year           9704 non-null   int64  
     6   origin               9704 non-null   object 
     7   fuel_type            9704 non-null   object 
     8   drivetrain           9704 non-null   object 
     9   num_doors            9202 non-null   float64
     10  fuel_efficiency_mpg  9704 non-null   float64
    dtypes: float64(6), int64(2), object(3)
    memory usage: 834.1+ KB
    None
    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    Fuel types:2
    QTD: fuel_type
    Gasoline    4898
    Diesel      4806
    Name: count, dtype: int64
    23.759122836520497


.. code:: ipython3

    df_horsepower = df_arq1["horsepower"]
    print(df_horsepower.mean())
    print(df_horsepower.isnull().sum())
    print(df_horsepower.value_counts())
    
    print("x"*100)
    
    df_horsepower1 = df_horsepower.fillna(152)
    print(df_horsepower1.value_counts())
    print(df_horsepower1.mean())


.. parsed-literal::

    149.65729212983547
    708
    horsepower
    152.0    142
    145.0    141
    151.0    134
    148.0    130
    141.0    130
            ... 
    46.0       1
    43.0       1
    53.0       1
    66.0       1
    61.0       1
    Name: count, Length: 192, dtype: int64
    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    horsepower
    152.0    850
    145.0    141
    151.0    134
    141.0    130
    148.0    130
            ... 
    46.0       1
    43.0       1
    53.0       1
    66.0       1
    61.0       1
    Name: count, Length: 192, dtype: int64
    149.82821516900248


.. code:: ipython3

    import numpy as np
    asia = df_arq1[df_arq1["origin"] == "Asia"]
    print(asia.head())
    print("x"*100)
    selected_col = asia[["model_year", "vehicle_weight"]]
    print(np.array(selected_col.head(7)))
    X = np.array(selected_col.head(7))
    TransposeX = X.T
    XTX = TransposeX@X
    XTX_inv = np.linalg.inv(XTX)
    y = np.array([1100, 1300, 800, 900, 1000, 1100, 1200])
    w = (XTX_inv @ TransposeX) * y
    print(w.sum())


.. parsed-literal::

        engine_displacement  num_cylinders  horsepower  vehicle_weight  \
    8                   250            1.0       174.0     2714.219310   
    12                  320            5.0       145.0     2783.868974   
    14                  200            6.0       160.0     3582.687368   
    20                  150            3.0       197.0     2231.808142   
    21                  160            4.0       133.0     2659.431451   
    
        acceleration  model_year origin fuel_type         drivetrain  num_doors  \
    8           10.3        2016   Asia    Diesel  Front-wheel drive       -1.0   
    12          15.1        2010   Asia    Diesel    All-wheel drive        1.0   
    14          14.9        2007   Asia    Diesel    All-wheel drive        0.0   
    20          18.7        2011   Asia  Gasoline  Front-wheel drive        1.0   
    21           NaN        2016   Asia  Gasoline  Front-wheel drive       -1.0   
    
        fuel_efficiency_mpg  
    8             16.823554  
    12            16.175820  
    14            11.871091  
    20            18.889083  
    21            16.077730  
    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    [[2016.         2714.21930965]
     [2010.         2783.86897424]
     [2007.         3582.68736772]
     [2011.         2231.8081416 ]
     [2016.         2659.43145076]
     [2014.         2844.22753389]
     [2019.         3761.99403819]]
    0.5187709081074009
